"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9522],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,y=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(y,o(o({ref:n},u),{},{components:t})):r.createElement(y,o({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5923:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(8168),a=(t(6540),t(5680));const i={},o="Examples",s={unversionedId:"python-sdk/tavily-hybrid-rag/examples",id:"python-sdk/tavily-hybrid-rag/examples",isDocsHomePage:!1,title:"Examples",description:"Setup",source:"@site/docs/python-sdk/tavily-hybrid-rag/examples.md",sourceDirName:"python-sdk/tavily-hybrid-rag",slug:"/python-sdk/tavily-hybrid-rag/examples",permalink:"/docs/python-sdk/tavily-hybrid-rag/examples",editUrl:"https://github.com/tavily-ai/tavily-python/tree/master/docs/docs/python-sdk/tavily-hybrid-rag/examples.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"API Reference",permalink:"/docs/python-sdk/tavily-hybrid-rag/api-reference"},next:{title:"API Reference",permalink:"/docs/rest-api/api-reference"}},l=[{value:"Setup",id:"setup",children:[],level:2},{value:"Samples",id:"samples",children:[{value:"Sample 1: Using a custom saving function",id:"sample-1-using-a-custom-saving-function",children:[],level:3},{value:"Sample 2: Using a custom embedding function",id:"sample-2-using-a-custom-embedding-function",children:[],level:3},{value:"Sample 3: Using a custom ranking function",id:"sample-3-using-a-custom-ranking-function",children:[],level:3}],level:2}],c={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(u,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"examples"},"Examples"),(0,a.yg)("h2",{id:"setup"},"Setup"),(0,a.yg)("p",null,"Follow the setup instructions in ",(0,a.yg)("a",{parentName:"p",href:"/docs/python-sdk/tavily-hybrid-rag"},"Getting Started")),(0,a.yg)("h2",{id:"samples"},"Samples"),(0,a.yg)("h3",{id:"sample-1-using-a-custom-saving-function"},"Sample 1: Using a custom saving function"),(0,a.yg)("p",null,"You might want to add some extra properties to documents you're inserting or even discard some of them based on custom criteria. This can be done by passing a function to the ",(0,a.yg)("inlineCode",{parentName:"p"},"save_foreign")," parameter:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"def save_document(document):\n    if document['score'] < 0.5:\n        return None # Do not save documents with low scores\n    \n    return {\n        'content': document['content'],\n\n         # Save the title and URL in the database\n        'site_title': document['title'],\n        'site_url': document['url'],\n\n        # Add a new field\n        'added_at': datetime.now()\n    }\n\nresults = hybrid_rag.search(\"Who is Leo Messi?\", save_foreign=save_document)\n")),(0,a.yg)("h3",{id:"sample-2-using-a-custom-embedding-function"},"Sample 2: Using a custom embedding function"),(0,a.yg)("p",null,"By default, we use ",(0,a.yg)("a",{parentName:"p",href:"https://cohere.com/embeddings"},"Cohere")," for our embeddings. If you want to use your own embeddings, can pass a custom embedding function to the TavilyHybridClient:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"def my_embedding_function(text):\n    return my_embedding_model.encode(text)\n\nhybrid_rag = TavilyHybridClient(\n    # ...\n    embedding_function=my_embedding_function\n)\n")),(0,a.yg)("h3",{id:"sample-3-using-a-custom-ranking-function"},"Sample 3: Using a custom ranking function"),(0,a.yg)("p",null,"Cohere's ",(0,a.yg)("a",{parentName:"p",href:"https://cohere.com/rerank"},"rerank")," model is used by default, but you can pass your own function to the ",(0,a.yg)("inlineCode",{parentName:"p"},"ranking_function")," parameter:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"def my_ranking_function(query, documents, top_n):\n    return my_ranking_model.rank(query, documents, top_n)\n\nhybrid_rag = TavilyHybridClient(\n    # ...\n    ranking_function=my_ranking_function\n)\n")))}d.isMDXComponent=!0}}]);